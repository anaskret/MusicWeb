<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MusicWeb.Api</name>
    </assembly>
    <members>
        <member name="M:MusicWeb.Api.Controllers.Artists.ArtistCommentsController.GetArtists(System.Int32)">
            <summary>
            Gets all comments for an artist
            </summary>
        </member>
        <member name="M:MusicWeb.Api.Controllers.Artists.ArtistCommentsController.GetArtist(System.Int32)">
            <summary>
            Gets a single comment
            </summary>
        </member>
        <member name="M:MusicWeb.Api.Controllers.Artists.ArtistCommentsController.CreateComment(MusicWeb.Models.Dtos.Artists.Create.CreateArtistCommentDto)">
            <summary>
            Creates a comment
            </summary>
        </member>
        <member name="M:MusicWeb.Api.Controllers.Artists.ArtistCommentsController.UpdateComment(MusicWeb.Models.Models.Artists.ArtistCommentDto)">
            <summary>
            Updates a comment
            </summary>
        </member>
        <member name="M:MusicWeb.Api.Controllers.Artists.ArtistCommentsController.UpdateComment(System.Int32)">
            <summary>
            Deletes a comment
            </summary>
        </member>
        <member name="M:MusicWeb.Api.Controllers.Artists.ArtistsController.GetFullArtistData(System.Int32)">
            <summary>
            Gets full data for an artist or a band
            </summary>
        </member>
        <member name="M:MusicWeb.Api.Controllers.Artists.ArtistsController.GetById(System.Int32)">
            <summary>
            Gets a single artist or a band without extra data
            </summary>
        </member>
        <member name="M:MusicWeb.Api.Controllers.Artists.ArtistsController.GetAllPagedSearchStriny(System.Int32,System.Int32,MusicWeb.Models.Enums.SortType,System.DateTime,System.DateTime,System.String)">
            <summary>
            Gets paged artists and bands woth search string
            </summary>
            <remarks>
            SortTypes: &#xA; 
                0 - Alphabetical Ascending &#xA;
                1 - Alphabetical Descending &#xA;
                2 - Popularity Ascending &#xA; 
                3 - Popularity Descending &#xA;
            </remarks>
        </member>
        <member name="M:MusicWeb.Api.Controllers.Artists.ArtistsController.GetAllPaged(System.Int32,System.Int32,MusicWeb.Models.Enums.SortType,System.DateTime,System.DateTime)">
            <summary>
            Gets paged artists and bands
            </summary>
            <remarks>
            SortTypes: &#xA; 
                0 - Alphabetical Ascending &#xA;
                1 - Alphabetical Descending &#xA;
                2 - Popularity Ascending &#xA; 
                3 - Popularity Descending &#xA;
            </remarks>
        </member>
        <member name="M:MusicWeb.Api.Controllers.Artists.ArtistsController.CreateArtist(MusicWeb.Models.Dtos.Artists.Create.CreateArtistDto)">
            <summary>
            Creates an artist or a band.
            </summary>
            <remarks>
            To create a band set IsBand = true and IsIndividual = false &#xA;
            To add a band member set IsBand = false, IsIndividual = false nad BandId = SomeBandId &#xA;
            To add an individual artist (without a band) set IsIndividual = true and IsBand = false &#xA;
            To add an artist image pass image bytes in ImageBytes, otherwise set the property to an empty string &#xA;
            </remarks>
        </member>
        <member name="M:MusicWeb.Api.Controllers.Artists.ArtistsController.UpdateArtist(MusicWeb.Models.Dtos.Artists.ArtistDto)">
            <summary>
            Updates an artist or a band
            </summary>
        </member>
        <member name="M:MusicWeb.Api.Controllers.Artists.ArtistsController.UpdateArtistImage(MusicWeb.Models.Dtos.Artists.ArtistFileUpdateDto)">
            <summary>
            Updates artist image
            </summary>
        </member>
        <member name="M:MusicWeb.Api.Controllers.Artists.ArtistsController.DeleteArtist(System.Int32)">
            <summary>
            Deletes an artist or a band
            </summary>
        </member>
        <member name="M:MusicWeb.Api.Controllers.Genres.GenreController.GetAll">
            <summary>
            Gets all music genres
            </summary>
        </member>
        <member name="M:MusicWeb.Api.Controllers.Genres.GenreController.GetById(System.Int32)">
            <summary>
            Gets a single music genre
            </summary>
        </member>
        <member name="M:MusicWeb.Api.Controllers.Genres.GenreController.CreateGenre(MusicWeb.Models.Dtos.Genres.Create.CreateGenreDto)">
            <summary>
            Creates a music genre
            </summary>
        </member>
        <member name="M:MusicWeb.Api.Controllers.Genres.GenreController.UpdateGenre(MusicWeb.Models.Dtos.Genres.GenreDto)">
            <summary>
            Updates a music genre
            </summary>
        </member>
        <member name="M:MusicWeb.Api.Controllers.Genres.GenreController.DeleteGenre(System.Int32)">
            <summary>
            Deletes a music genre
            </summary>
        </member>
        <member name="M:MusicWeb.Api.Controllers.Origins.OriginsController.GetAllCountries">
            <summary>
            Gets all countries
            </summary>
        </member>
        <member name="M:MusicWeb.Api.Controllers.Origins.OriginsController.GetCountryById(System.Int32)">
            <summary>
            Gets a single country
            </summary>
        </member>
        <member name="M:MusicWeb.Api.Controllers.Origins.OriginsController.GetCountryStates(System.Int32)">
            <summary>
            Gets all states in a country
            </summary>
        </member>
        <member name="M:MusicWeb.Api.Controllers.Origins.OriginsController.CreateCountry(MusicWeb.Models.Dtos.Origins.CountryDto)">
            <summary>
            Creates a country
            </summary>
        </member>
        <member name="M:MusicWeb.Api.Controllers.Origins.OriginsController.UpdateCountry(MusicWeb.Models.Dtos.Origins.CountryDto)">
            <summary>
            Updates a country
            </summary>
        </member>
        <member name="M:MusicWeb.Api.Controllers.Origins.OriginsController.DeleteCountry(System.Int32)">
            <summary>
            Deletes a country with all its states and citites
            </summary>
        </member>
        <member name="M:MusicWeb.Api.Controllers.Origins.OriginsController.GetAllStates">
            <summary>
            Gets all states
            </summary>
        </member>
        <member name="M:MusicWeb.Api.Controllers.Origins.OriginsController.GetStateById(System.Int32)">
            <summary>
            Gets a single state
            </summary>
        </member>
        <member name="M:MusicWeb.Api.Controllers.Origins.OriginsController.GetStateCities(System.Int32)">
            <summary>
            Gets all cities in a state
            </summary>
        </member>
        <member name="M:MusicWeb.Api.Controllers.Origins.OriginsController.CreateState(MusicWeb.Models.Dtos.Origins.StateDto)">
            <summary>
            Create a state
            </summary>
        </member>
        <member name="M:MusicWeb.Api.Controllers.Origins.OriginsController.UpdateState(MusicWeb.Models.Dtos.Origins.StateDto)">
            <summary>
            Updates a state
            </summary>
        </member>
        <member name="M:MusicWeb.Api.Controllers.Origins.OriginsController.DeleteState(System.Int32)">
            <summary>
            Deletes a state with all its cities
            </summary>
        </member>
        <member name="M:MusicWeb.Api.Controllers.Origins.OriginsController.GetAllCities">
            <summary>
            Gets all cities
            </summary>
        </member>
        <member name="M:MusicWeb.Api.Controllers.Origins.OriginsController.GetCityById(System.Int32)">
            <summary>
            Gets a single city
            </summary>
        </member>
        <member name="M:MusicWeb.Api.Controllers.Origins.OriginsController.CreateCity(MusicWeb.Models.Dtos.Origins.CityDto)">
            <summary>
            Creates a city
            </summary>
        </member>
        <member name="M:MusicWeb.Api.Controllers.Origins.OriginsController.UpdateCity(MusicWeb.Models.Dtos.Origins.CityDto)">
            <summary>
            Updates a city
            </summary>
        </member>
        <member name="M:MusicWeb.Api.Controllers.Origins.OriginsController.DeleteCity(System.Int32)">
            <summary>
            Deletes a city
            </summary>
        </member>
        <member name="M:MusicWeb.Api.Controllers.Posts.PostController.GetUserPosts(System.String)">
            <summary>
            WIP
            </summary>
        </member>
        <member name="M:MusicWeb.Api.Controllers.Posts.PostController.GetAllPosts">
            <summary>
            Gets all posts
            </summary>
        </member>
        <member name="M:MusicWeb.Api.Controllers.Posts.PostController.GetPostById(System.Int32)">
            <summary>
            Gets a single post
            </summary>
        </member>
        <member name="M:MusicWeb.Api.Controllers.Posts.PostController.CreatePost(MusicWeb.Models.Dtos.Posts.CreatePostDto)">
            <summary>
            Creates a post
            </summary>
        </member>
        <member name="M:MusicWeb.Api.Controllers.Posts.PostController.UpdatePost(MusicWeb.Models.Dtos.Posts.PostDto)">
            <summary>
            Updates a post
            </summary>
        </member>
        <member name="M:MusicWeb.Api.Controllers.Posts.PostController.DeletePost(System.Int32)">
            <summary>
            Deletes a post
            </summary>
        </member>
        <member name="M:MusicWeb.Api.Controllers.Ratings.ArtistRatingController.GetById(System.Int32)">
            <summary>
            Gets a single rating
            </summary>
        </member>
        <member name="M:MusicWeb.Api.Controllers.Ratings.ArtistRatingController.GetAllForArtist(System.Int32)">
            <summary>
            Gets all ratings for an artist
            </summary>
        </member>
        <member name="M:MusicWeb.Api.Controllers.Ratings.ArtistRatingController.CreateArtist(MusicWeb.Models.Dtos.Ratings.CreateArtistRatingDto)">
            <summary>
            Creates an artist rating
            </summary>
        </member>
        <member name="M:MusicWeb.Api.Controllers.Ratings.ArtistRatingController.UpdateArtist(MusicWeb.Models.Dtos.Ratings.ArtistRatingDto)">
            <summary>
            Updates a rating for an artist
            </summary>
        </member>
    </members>
</doc>
